name: CI

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports: ["6379:6379"]
        env:
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy pylint pytest pytest-asyncio

      # 4. Linting
      - name: Linting
        run: pylint app --disable=R,C

      # 5. Type checking
      - name: Type Checking
        run: mypy app --ignore-missing-imports

      # 6. Run tests
      - name: Run Tests
        env:
          DB_URI: ${{ secrets.DB_URI }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: pytest -v --maxfail=1 --disable-warnings
